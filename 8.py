digits = "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450"
NUM_digits = 1000
temp_list = []
adjacent_13digits_list = []
multiples_13digits_list = []
multiples_13digits = 1

# 1. 주어진 1000개의 숫자를 13개의 그룹으로 분리하여 저장한다.
digits_list = list(digits)

for i in range(0, NUM_digits-12):
    for k in range(0, 13):
        temp_list.append(digits_list[i + k])
    adjacent_13digits_list.append(temp_list)
    temp_list = []

# 2. 13개의 숫자 그룹의 곱을 구한다.
for i in range(0, len(adjacent_13digits_list)):
    for k in range(0, 13):
        multiples_13digits *= int(adjacent_13digits_list[i][k])
    multiples_13digits_list.append(multiples_13digits)
    multiples_13digits = 1

# 3. 가장 큰 수를 찾는다.
max_value = multiples_13digits_list[0]
for i in range(1, len(multiples_13digits_list)):
    if multiples_13digits_list[i] > max_value:
        max_value = multiples_13digits_list[i]

# 4. 연속된 4자리 수를 찾는다.
adjacent_13digits_index = multiples_13digits_list.index(max_value)
adjacent_13digits = multiples_13digits_list[adjacent_13digits_index]
print(adjacent_13digits)

